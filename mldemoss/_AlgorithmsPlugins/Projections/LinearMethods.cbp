<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<CodeBlocks_project_file>
	<FileVersion major="1" minor="6" />
	<Project>
		<Option title="pluginLinear" />
		<Option makefile_is_custom="1" />
		<Option execution_dir="../LinearMethods" />
		<Option pch_mode="2" />
		<Option compiler="gcc" />
		<MakeCommands>
			<Build command="$make -f $makefile all" />
			<CompileFile command="$make -f $makefile $file" />
			<Clean command="$make -f $makefile clean" />
			<DistClean command="$make -f $makefile distclean$target" />
			<AskRebuildNeeded command="$make -q -f $makefile all" />
			<SilentBuild command="$make -s -f $makefile all" />
		</MakeCommands>
		<Build>
			<Target title="debug">
				<Option output="../../plugins/libmld_LinearMethods" prefix_auto="1" extension_auto="1" />
				<Option object_output="obj/" />
				<Option type="3" />
				<Option compiler="gcc" />
				<Compiler>
					<Add option="-g" />
				</Compiler>
				<MakeCommands>
					<Build command="$make -f $makefile all" />
					<CompileFile command="$make -f $makefile $file" />
					<Clean command="$make -f $makefile clean" />
					<DistClean command="$make -f $makefile distclean$target" />
					<AskRebuildNeeded command="$make -q -f $makefile all" />
					<SilentBuild command="$make -s -f $makefile all" />
				</MakeCommands>
			</Target>
			<Target title="release">
				<Option output="../../plugins/libmld_LinearMethods" prefix_auto="1" extension_auto="1" />
				<Option object_output="obj/" />
				<Option type="3" />
				<Option compiler="gcc" />
				<Compiler>
					<Add option="-O2" />
				</Compiler>
				<Linker>
					<Add option="-s" />
				</Linker>
				<MakeCommands>
					<Build command="$make -f $makefile all" />
					<CompileFile command="$make -f $makefile $file" />
					<Clean command="$make -f $makefile clean" />
					<DistClean command="$make -f $makefile distclean$target" />
					<AskRebuildNeeded command="$make -q -f $makefile all" />
					<SilentBuild command="$make -s -f $makefile all" />
				</MakeCommands>
			</Target>
		</Build>
		<Compiler>
			<Add option="-Wall" />
		</Compiler>
		<ExtraCommands>
			<Add before="$(#qt4)/bin/qmake -o Makefile $PROJECT_NAME.pro CONFIG+=$(TARGET_NAME)" />
			<Mode after="always" />
		</ExtraCommands>
		<Unit filename="JnS/JnS.cpp" />
		<Unit filename="JnS/JnS.h" />
		<Unit filename="JnS/Matutil.cpp" />
		<Unit filename="JnS/Matutil.h" />
		<Unit filename="classifierLinear.cpp" />
		<Unit filename="classifierLinear.h" />
		<Unit filename="interfaceLinearClassifier.cpp" />
		<Unit filename="interfaceLinearClassifier.h" />
		<Unit filename="liblinear/blas.h" />
		<Unit filename="liblinear/blasp.h" />
		<Unit filename="liblinear/daxpy.c">
			<Option compilerVar="CC" />
		</Unit>
		<Unit filename="liblinear/ddot.c">
			<Option compilerVar="CC" />
		</Unit>
		<Unit filename="liblinear/dnrm2.c">
			<Option compilerVar="CC" />
		</Unit>
		<Unit filename="liblinear/dscal.c">
			<Option compilerVar="CC" />
		</Unit>
		<Unit filename="liblinear/linear.cpp" />
		<Unit filename="liblinear/linear.h" />
		<Unit filename="liblinear/predict.c">
			<Option compilerVar="CC" />
		</Unit>
		<Unit filename="liblinear/train.c">
			<Option compilerVar="CC" />
		</Unit>
		<Unit filename="liblinear/tron.cpp" />
		<Unit filename="liblinear/tron.h" />
		<Unit filename="paramsLinear.ui" />
		<Unit filename="pluginLinear.cpp" />
		<Unit filename="pluginLinear.h" />
		<Extensions>
			<code_completion />
			<envvars />
			<debugger />
		</Extensions>
	</Project>
</CodeBlocks_project_file>
